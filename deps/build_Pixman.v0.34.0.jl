using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libpixman"], :libpixman),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/staticfloat/PixmanBuilder/releases/download/v0.34.0-1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/Pixman.v0.34.0.aarch64-linux-gnu.tar.gz", "202d8658a38c3a97d679aaf871c4b4b278a2df2de80e5151884746cd8aecacf1"),
    Linux(:aarch64, :musl) => ("$bin_prefix/Pixman.v0.34.0.aarch64-linux-musl.tar.gz", "40215a85cba958e8ac0bbf8fa5c76f07ed41ba10439187a6eed426e9db9fe969"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/Pixman.v0.34.0.arm-linux-gnueabihf.tar.gz", "cb6013ae64a8da3c4a5b706052043dd2a82287e6d6a8ef7030c94f9be404860e"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/Pixman.v0.34.0.arm-linux-musleabihf.tar.gz", "f93e8e42ae7e8a9833288ed71441de699c5639790f6772a3d442b76f55e551c7"),
    Linux(:i686, :glibc) => ("$bin_prefix/Pixman.v0.34.0.i686-linux-gnu.tar.gz", "6aa014509b393fed0b5bf2861844f415c2c401cc1f385f1b26df1eb5574682ab"),
    Linux(:i686, :musl) => ("$bin_prefix/Pixman.v0.34.0.i686-linux-musl.tar.gz", "7f52cca4f29caf230b1350187f42584c12c71e7c306a6a7cc6c8b62794c548f0"),
    Windows(:i686) => ("$bin_prefix/Pixman.v0.34.0.i686-w64-mingw32.tar.gz", "c06c104d74a32fadb1aee26b85a79a83478034ef34969e943f8868f0d333c547"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/Pixman.v0.34.0.powerpc64le-linux-gnu.tar.gz", "6788f04d8091ac90522b2e5f09961d2408789e37ce6c01f8730e3cdc43dbdcf3"),
    MacOS(:x86_64) => ("$bin_prefix/Pixman.v0.34.0.x86_64-apple-darwin14.tar.gz", "248ac947cbf73d5b342694f8421db5b59c558ca5349dfcca6130ca89ad4368cb"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/Pixman.v0.34.0.x86_64-linux-gnu.tar.gz", "3382fd010d41bab9c457f1e317ae8d426e34311ddbab2a31d0937b2255873886"),
    Linux(:x86_64, :musl) => ("$bin_prefix/Pixman.v0.34.0.x86_64-linux-musl.tar.gz", "27931e6fae07e27acae91657cb7b67d9089f2942ef09b9a082e87cff52bcb603"),
    FreeBSD(:x86_64) => ("$bin_prefix/Pixman.v0.34.0.x86_64-unknown-freebsd11.1.tar.gz", "ae5617bfd640b8f6cb47a05440b3a96807cefad9e6cc4af5d333620aac6c39b7"),
    Windows(:x86_64) => ("$bin_prefix/Pixman.v0.34.0.x86_64-w64-mingw32.tar.gz", "4cbf76c796ae923e3d7a69d3b06147b8e944bbeb0d224c21a4834be2fa519c22"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products)
