using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libfreetype"], :libfreetype),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/Gnimuc/FreeTypeBuilder/releases/download/v2.9.1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/FreeType2.v2.9.0.aarch64-linux-gnu.tar.gz", "c47c6bdef0f8483cf4e968877ee8778fe173f53cadb12de22e6aeee34a70384d"),
    Linux(:aarch64, :musl) => ("$bin_prefix/FreeType2.v2.9.0.aarch64-linux-musl.tar.gz", "b50ef907f7019bc7cc49a16a46e24e521213dda7fe1ab48442900d82860230e0"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/FreeType2.v2.9.0.arm-linux-gnueabihf.tar.gz", "960642c185936a501a4c7301f042c5bc616e85d859cf868516b72b787f2f1380"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/FreeType2.v2.9.0.arm-linux-musleabihf.tar.gz", "4e624965ab3aaae52e1751fa60d1eeebca2df60e26cf0b1c5876bd53005144c7"),
    Linux(:i686, :glibc) => ("$bin_prefix/FreeType2.v2.9.0.i686-linux-gnu.tar.gz", "f344cd50f3cd9e4eed72fabe48ccce6acf8129cb966b2654ea6b9bb0c729a32a"),
    Linux(:i686, :musl) => ("$bin_prefix/FreeType2.v2.9.0.i686-linux-musl.tar.gz", "f7480c18b444509d0f97eea8f5013c068898de05fad1e29fc035d73454d85153"),
    Windows(:i686) => ("$bin_prefix/FreeType2.v2.9.0.i686-w64-mingw32.tar.gz", "8114192e9f9f23053bc94eb352b7b87d5a4e1e2438396668e08c5a8b63987fdd"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/FreeType2.v2.9.0.powerpc64le-linux-gnu.tar.gz", "6714d99a688e994aa311d06e6214b25264f4dc976fe7fdbf9338287656379fe3"),
    MacOS(:x86_64) => ("$bin_prefix/FreeType2.v2.9.0.x86_64-apple-darwin14.tar.gz", "1c1fb7b064735780472c7b3de34639072952c274dea50986b1e37a2888d5e642"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/FreeType2.v2.9.0.x86_64-linux-gnu.tar.gz", "1abcf93c7bc5e4d94d89823c32577add3d4948d7cdbcdc5214f36594c45ca96e"),
    Linux(:x86_64, :musl) => ("$bin_prefix/FreeType2.v2.9.0.x86_64-linux-musl.tar.gz", "9fb7aacef54b59462e9fc5f008df4ffbacf6f828adc54452afb6c7796b825bb9"),
    FreeBSD(:x86_64) => ("$bin_prefix/FreeType2.v2.9.0.x86_64-unknown-freebsd11.1.tar.gz", "57af70cbbfda1731e91210a883d5ade50772485189e0a7931f30ad64ff698c7f"),
    Windows(:x86_64) => ("$bin_prefix/FreeType2.v2.9.0.x86_64-w64-mingw32.tar.gz", "e28168f248814da26c6319bd9e55982b233f5605e662edaa3c8d6617fb375def"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products)
